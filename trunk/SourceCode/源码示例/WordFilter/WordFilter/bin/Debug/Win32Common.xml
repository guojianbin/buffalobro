<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Win32Common</name>
    </assembly>
    <members>
        <!-- 对于成员“M:Win32Common.SingleForms.IsControlExists(System.Windows.Forms.Control)”忽略有格式错误的 XML 注释 -->
        <member name="M:Win32Common.SingleForms.GetControl(System.Type,System.Object[])">
            <summary>
            根据Form的类型获取其实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.SingleForms.GetControl``1(System.Object[])">
            <summary>
            获取指定窗体
            </summary>
            <typeparam name="T">窗体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Win32Common.SingleForms.GetForm``1(System.Object[])">
            <summary>
            获取指定窗体
            </summary>
            <typeparam name="T">窗体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Win32Common.PELibrary.PEHandle.LoadNTHead">
            <summary>
            加载NT头
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEHandle.FindSectionHeader(System.UInt32)">
            <summary>
            找出当前虚拟偏移所在的区段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.PELibrary.PEHandle.RVAToFileOffest(System.UInt32)">
            <summary>
            虚拟偏移转换成文件相对位置
            </summary>
            <param name="rav">内存相对地址</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.PELibrary.PEHandle.VaToFileOffest(System.UInt32)">
            <summary>
            虚拟地址转换成文件相对位置
            </summary>
            <param name="rav">内存相对地址</param>
            <returns></returns>
        </member>
        <member name="P:Win32Common.PELibrary.PEHandle.SectionHeaders">
            <summary>
            区块
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEHandle.DosHeader">
            <summary>
            DOS头
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEHandle.NtHeader">
            <summary>
            NT头
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.Enums.ImageOptionalMagicType">
            <summary>
            标记字类型
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ImageOptionalMagicType.UnKnow">
            <summary>
            未知文件
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ImageOptionalMagicType.RomImage">
            <summary>
            ROM影像文件
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ImageOptionalMagicType.CommonExe">
            <summary>
            普通可执行文件
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ImageOptionalMagicType.PE32">
            <summary>
            PE32+文件
            </summary>
        </member>
        <member name="M:Win32Common.IllegalCrossControl.SetProperty(System.Windows.Forms.Control,System.String,System.Object)">
            <summary>
            设置控件的属性
            </summary>
            <param name="ctr">要设置的控件</param>
            <param name="propertyName">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:Win32Common.IllegalCrossControl.InvokeMethod(System.Windows.Forms.Control,System.String,System.Type[],System.Object[])">
            <summary>
            设置控件的属性
            </summary>
            <param name="ctr">要设置的控件</param>
            <param name="methodName">函数名</param>
            <param name="parametersType">参数类型</param>
            <param name="args">参数</param>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceEntry">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceEntry.Name">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceEntry.ResourceInfo">
            <summary>
            资源的指向信息
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.SetDescriptorName">
            <summary>
            设置dll名称的值
            </summary>
            <param name="nameValue"></param>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.LoadInputAddressThunk">
            <summary>
            加载输入地址表(IAT)
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.LoadInputNameThunk">
            <summary>
            加载输入名称表(INT)
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.LoadThunk(System.UInt32)">
            <summary>
            加载输入表
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.ImportDescriptor">
            <summary>
            输入表信息
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.IatInfos">
            <summary>
            地址名称表(IAT)数组
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ImportDescriptorInfo.IntInfos">
            <summary>
            输入名称表(INT)数组
            </summary>
        </member>
        <member name="M:Win32Common.Win32.KeyBoardListener.SetCombination(System.Int32,System.Boolean)">
            <summary>
            设置组合键
            </summary>
            <param name="vkCode"></param>
        </member>
        <member name="M:Win32Common.Win32.KeyBoardListener.MakeKeys(System.Int32)">
            <summary>
            组合按键信息
            </summary>
            <param name="vkCode"></param>
            <returns></returns>
        </member>
        <member name="P:Win32Common.Win32.KeyBoardListener.IsListening">
            <summary>
            是否已经监控
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.Misc.PhysicalAddress">
            <summary>
            
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType">
            <summary>
            重定位类型
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType.#ctor(System.UInt16,System.UInt32)">
            <summary>
            重定位信息
            </summary>
            <param name="offestValue">值</param>
            <param name="virtualAddress">重定位表的RVA</param>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType.RelocatioType">
            <summary>
            重定位类型
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.ImageBaseRelocationOffestType.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo">
            <summary>
            输出表的信息
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo.Address">
            <summary>
            函数地址
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo.Name">
            <summary>
            函数名
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo.NameRAV">
            <summary>
            名称的RAV
            </summary>
        </member>
        <member name="T:Win32.FormInfo">
            <summary>
            窗体的信息
            </summary>
        </member>
        <member name="M:Win32.FormInfo.GetContorlText(System.IntPtr)">
            <summary>
            获取控件的文本值
            </summary>
            <param name="txthandle"></param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.ThreadCycle.GetCurTnreadCycle">
            <summary>
            获取当前线程周期
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.ThreadCycle.Star">
            <summary>
            开始
            </summary>
        </member>
        <member name="M:Win32Common.ThreadCycle.Stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="P:Win32Common.ThreadCycle.TotleCycle">
            <summary>
            获取一共用了多少CPU周期
            </summary>
            <returns></returns>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceItem.Type">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceItem.Entrys">
            <summary>
            信息集合
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32">
            <summary>
            可选择头(IMAGE_OPTIONAL_HEADER)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.Magic">
            <summary>
            标记字
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion">
            <summary>
            链接器的主版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion">
            <summary>
            链接器的次版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfCode">
            <summary>
            可执行代码的长度
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData">
            <summary>
            初始化数据的长度（数据段）
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData">
            <summary>
            未初始化数据的长度（bss段）
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.AddressOfEntryPouint">
            <summary>
            代码的入口RVA地址，程序从这儿开始执行，常称为程序的原入口点OEP（Original Entry Pouint）
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.BaseOfCode">
            <summary>
            可执行代码起始位置
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.BaseOfData">
            <summary>
            初始化数据起始位置
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.ImageBase">
            <summary>
            载入程序首选的RVA地址。这个地址可被Loader改变
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SectionAlignment">
            <summary>
            段加载后在内存中的对齐值
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.FileAlignment">
            <summary>
            段在文件中的对齐方式
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion">
            <summary>
            操作系统最低版本号的主版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion">
            <summary>
            操作系统最低版本号的次版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorImageVersion">
            <summary>
            程序的主版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorImageVersion">
            <summary>
            程序的子版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion">
            <summary>
            要求最低子系统版本的主版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion">
            <summary>
            要求最低子系统版本的次版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.Win32VersionValue">
            <summary>
            这个值总是为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfImage">
            <summary>
            程序调入后占用内存大小（字节），等于所有段的长度之和
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfHeaders">
            <summary>
            所有文件头长度之和，它等于从文件开始到第一个段的原始数据之间的大小
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.CheckSum">
            <summary>
            校验和，仅用在驱动程序中，在可执行文件中可能为0。它的计算方法Microsoft不公开，在imagehelp.dll中的CheckSumMappedFile()函数可以计算它
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.Subsystem">
            <summary>
            一个标明可执行文件所期望的子系统的枚举值
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.DllCharacteristics">
            <summary>
            DLL状态
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve">
            <summary>
            保留堆栈大小
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit">
            <summary>
            启动后实际申请的堆栈数，可随实际情况变大
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve">
            <summary>
            保留堆大小
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit">
            <summary>
            实际堆大小
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.LoaderFlags">
            <summary>
            加载标志(与调试有关，默认为0)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes">
            <summary>
            目录表入口个数，这个值也不可靠，可用常数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_OPTIONAL_HEADER32.DataDirectory">
            <summary>
            数据目录表集合
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_NT_HEADERS.Signature">
            <summary>
             PE文件头标志:"PE\0\0"
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_NT_HEADERS.FileHeader">
            <summary>
            PE文件物理分布的信息
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_NT_HEADERS.OptionalHeader">
            <summary>
            PE文件逻辑分布的信息
            </summary>
        </member>
        <member name="P:Win32Common.Win32.MessageBoxEx.DefaultLCID">
            <summary>
            默认区域ID
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIR_STRING_U.Length">
            <summary>
            字符串长度
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIR_STRING_U.NameString">
            <summary>
            unicode字符串
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY">
            <summary>
            资源目录
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.Characteristics">
            <summary>
            标识此资源的类型,但通常为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.TimeDateStamp">
            <summary>
            资源建立时间
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.MajorVersion">
            <summary>
            版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.MinorVersion">
            <summary>
            次版本号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.NumberOfNamedEntries">
            <summary>
            使用名字资源条目的个数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY.NumberOfIdEntries">
            <summary>
            使用ID数字资源条目的个数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.OffsetToData">
            <summary>
            资源数据的RVA
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.Size">
            <summary>
            资源数据长度
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.CodePage">
            <summary>
            代码页，一般为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DATA_ENTRY.Reserved">
            <summary>
            保留字段
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.IMAGE_BOUND_IMPORT_DESCRIPTOR.TimeDateStamp">
            <summary>
            被输入dll的时间戳
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.IMAGE_BOUND_IMPORT_DESCRIPTOR.OffsetModuleName">
            <summary>
            指向dll的名称的偏移(跟第一个IBID)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.IMAGE_BOUND_IMPORT_DESCRIPTOR.NumberOfModuleForwarderRefs">
            <summary>
            给出这个DLL文件为它的中转使用的DLL文件数
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.DisAsmType.DISASM_SIZE">
            <summary>
            快速确定指令大小，使用本模式你可以跑完各个代码，在这个模式中，会修改所有未定义成员
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.DisAsmType.DISASM_DATA">
            <summary>
            确定大小和分析操作数，使用该模式可以快速分析，例如，如果需要计算跳转目标，带*号的成员就未定义
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.DisAsmType.DISASM_FILE">
            <summary>
            确实大小,分析操作数和反汇编指令, 但不试图将地址转换为符号，如果地址和符号之间不对应可，使用该模式，例如你转储一个二进制文件的内容
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.DisAsmType.DISASM_CODE">
            <summary>
            全反汇编
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceInfo.LoadInfo">
            <summary>
            加载信息
            </summary>
            <param name="deep">层深</param>
            <param name="baseOffest">基地址</param>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceInfo.ResourceDirectory">
            <summary>
            资源信息
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceInfo.LstResourceInfo">
            <summary>
            资源信息集合
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER">
            <summary>
            DOS的.EXE头部(struct _IMAGE_DOS_HEADER)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_magic">
            <summary>
            魔术数字(MZ头值为 0x5A4D)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cblp">
            <summary>
            文件最后页的字节数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cp">
            <summary>
            文件页数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_crlc">
            <summary>
            重定义元素个数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cparhdr">
            <summary>
            头部尺寸，以段落为单位
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_minalloc">
            <summary>
            所需的最小附加段
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_maxalloc">
            <summary>
            所需的最大附加段
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_ss">
            <summary>
            初始的SS值(相对偏移量)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_sp">
            <summary>
            初始的SP值
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_csum">
            <summary>
            校验和
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_ip">
            <summary>
            初始的IP值
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_cs">
            <summary>
            初始的CS值(相对偏移量)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_lfarlc">
            <summary>
            重分配表文件地址
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_ovno">
            <summary>
            覆盖号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_res">
            <summary>
            保留字
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_oemid">
            <summary>
            OEM标识符(相对e_oeminfo)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_oeminfo">
            <summary>
            OEM信息
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_res2">
            <summary>
            保留字2
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DOS_HEADER.e_lfanew">
            <summary>
            新exe头部的文件地址
            </summary>
        </member>
        <member name="T:Win32Common.Win32.PeekMessageFlags">
            <summary>
            Window API enumerations
            </summary>
        </member>
        <member name="T:Win32Common.Win32.Msg">
            <summary>
            Windows消息类型
            </summary>
        </member>
        <member name="T:Win32Common.Win32.ProcessAccess">
            <summary>
            进程状态
            </summary>
        </member>
        <member name="T:Win32Common.Win32.EWX">
            <summary>
            退出Windows状态
            </summary>
        </member>
        <member name="T:Win32Common.Win32.TOKEN">
            <summary>
            退出Windows状态
            </summary>
        </member>
        <member name="T:Win32Common.Win32.KeyModifiers">
            <summary>
            组合键枚举
            </summary>
        </member>
        <member name="T:Win32Common.Win32.MessageSCType">
            <summary>
            Windows消息SC类型
            </summary>
        </member>
        <member name="T:Win32Common.Win32.DebugState">
            <summary>
            调试器状态
            </summary>
        </member>
        <member name="F:Win32Common.Win32.DebugState.DBG_CONTINUE">
            <summary>
             //返回继续调试状态值
            </summary>
        </member>
        <member name="F:Win32Common.Win32.DebugState.INFINITE">
            <summary>
            等待事件
            </summary>
        </member>
        <member name="T:Win32Common.Win32.ContextFlags64">
            <summary>
            线程信息标志
            </summary>
        </member>
        <member name="T:Win32Common.Win32.WMode">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.ResourceDirectorEntry">
            <summary>
            资源目录入口
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.ResourceDirString">
            <summary>
            字符串
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.NextDirectory">
            <summary>
            下一层目录
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ResourceDirectoryEntryInfo.ValueData">
            <summary>
            指向的资源
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.OriginalFirstThunk">
            <summary>
            指向包含输入名称表(INT)的RVA 或者是属性
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.TimeDateStamp">
            <summary>
            32位时间标记
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.ForwarderChain">
            <summary>
            第一个被转向的API索引，一般为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.Name">
            <summary>
            dll名字的指针(以00结尾的RAV地址)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.IMAGE_IMPORT_DESCRIPTOR.FirstThunk">
            <summary>
            指向包含地址名称表(IAT)的RVA 或者是属性
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.Enums.BaseRelocatioType">
            <summary>
            重定位类型
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.BaseRelocatioType.ImageRelBasedAbsolute">
            <summary>
            Image_Rel_Based_Absolute 没有含义为了让4位字节对齐
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.BaseRelocatioType.ImageRelBasedHighlow">
            <summary>
            Image_Rel_Based_Highlow 重定位指向的整个地址都被修正
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.BaseRelocatioType.ImageRelBasedDir64">
            <summary>
            Image_Rel_Based_Dir64 出现在64位PE文件中，对指向的整个地址修正
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TAsmmodel.code">
            <summary>
            二进制码
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TAsmmodel.mask">
            <summary>
            二进制码屏蔽(0: 位已忽略)
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TAsmmodel.length">
            <summary>
            代码长度，字节(0: 空)
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TAsmmodel.jmpsize">
            <summary>
            有关联跳转的偏移
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TAsmmodel.jmpoffset">
            <summary>
            关联偏移到IP
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TAsmmodel.jmppos">
            <summary>
            指令跳转偏移位置
            </summary>
        </member>
        <member name="M:Win32Common.Win32.HotKey.Register">
            <summary>
            注册此热键
            </summary>
        </member>
        <member name="M:Win32Common.Win32.HotKey.UnRegister">
            <summary>
            卸载此热键热键
            </summary>
        </member>
        <member name="P:Win32Common.Win32.HotKey.Id">
            <summary>
            热键的标识
            </summary>
        </member>
        <member name="P:Win32Common.Win32.HotKey.ModifierKey">
            <summary>
            屏蔽键
            </summary>
        </member>
        <member name="P:Win32Common.Win32.HotKey.Key">
            <summary>
            按键
            </summary>
        </member>
        <member name="P:Win32Common.Win32.HotKey.BindControl">
            <summary>
            绑定的控件s
            </summary>
        </member>
        <member name="P:Win32Common.Win32.HotKey.IsRegistered">
            <summary>
            是否已经注册了热键
            </summary>
        </member>
        <member name="M:Win32Common.Win32.AsmManager.RunAsm(System.Byte[],System.Int32)">
            <summary>
            开启新线程运行asm代码
            </summary>
            <param name="asmCode"></param>
            <param name="pid"></param>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.LoadInfo">
            <summary>
            加载信息
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.ReadExportAddressTable">
            <summary>
            找出按地址输出的函数信息集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.FindExportNameTable(Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo[])">
            <summary>
            找出按名字输出的函数信息集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.FillExportName(Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ExportInfo[])">
            <summary>
            给按名称输出的函数信息填充名字
            </summary>
            <param name="eat"></param>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.ImageExportDirectoryInfo.ImageExportInfo">
            <summary>
            输出信息
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.StartAddressOfRawData">
            <summary>
            内存起始地址
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.EndAddressOfRawData">
            <summary>
            内存终止地址
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.AddressOfIndex">
            <summary>
            运行库使用这个索引来定位局部数据
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.AddressOfCallBacks">
            <summary>
            PIMAGE_TLS_CALLBACK函数指针数组地址
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.SizeOfZeroFill">
            <summary>
            后边跟零的个数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_DIRECTORY_ENTRY_TLS.IMAGE_TLS_DIRECTORY32.Characteristics">
            <summary>
            保留，设为0
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.Enums.SubSystemType">
            <summary>
            执行文件所期望的子系统的枚举值
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.UnKnow">
            <summary>
            未知文件
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.UnNecessary">
            <summary>
            不需要子系统
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.GUI">
            <summary>
            图形接口子系统
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.CUI">
            <summary>
            字符子系统
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.OS2CUI">
            <summary>
            OS/2字符子系统
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.POSIX">
            <summary>
            POSIX字符子系统
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.Reserved">
            <summary>
            保留
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.SubSystemType.WinCE">
            <summary>
            Windows CE图形界面
            </summary>
        </member>
        <member name="T:Win32Common.Win32.CREATESTRUCT">
            <summary>
            Structures to interoperate with the Windows 32 API  
            </summary>
        </member>
        <member name="M:Win32Common.Win32.POINT.#ctor(System.Int32)">
            <summary>
            Point creation from lParam `s data
            </summary>
            <param name="lParam"></param>
        </member>
        <member name="T:Win32Common.Win32.KBDLLHOOKSTRUCT">
            <summary>
            键盘钩子信息结构体
            </summary>
        </member>
        <member name="F:Win32Common.Win32.KBDLLHOOKSTRUCT.vkCode">
            <summary>Especifica el codigo de tecla virtual, el codigo esta entre 1 y 254.</summary>
        </member>
        <member name="F:Win32Common.Win32.KBDLLHOOKSTRUCT.scanCode">
            <summary>Especifica el escaneo de hardware del codigo de la tecla</summary>
        </member>
        <member name="F:Win32Common.Win32.KBDLLHOOKSTRUCT.flags">
            <summary>especifica flags extendidos, mirar la estrucutra 'KBDLLHOOKSTRUCT' para mas info</summary>
        </member>
        <member name="F:Win32Common.Win32.KBDLLHOOKSTRUCT.time">
            <summary>especifica el time stamp para este mensaje.</summary>
        </member>
        <member name="F:Win32Common.Win32.KBDLLHOOKSTRUCT.dwExtraInfo">
            <summary>Especifica informacion extra para el mensaje</summary>
        </member>
        <member name="T:Win32Common.Win32.BROWSEINFO">
            <summary>
            Contains parameters for the SHBrowseForFolder function and
            receives information about the folder selected 
            by the user.
            </summary>
        </member>
        <member name="T:Win32Common.Win32.HardwareInfo">
            <summary>
            得到硬盘与CPU的ID及网卡MAC
            </summary>
        </member>
        <member name="M:Win32Common.Win32.HardwareInfo.GetHostName">
            <summary>
            取机器名 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.HardwareInfo.GetCpuID">
            <summary>
            取CPU编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.HardwareInfo.GetHardDiskID">
            <summary>
            取第一块硬盘编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.HardwareInfo.GetMacAddress">
            <summary>
            得到网卡MAC
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.HardwareInfo.GetMacByIP(System.String)">
            <summary>
            根据IP获取MAC
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:Win32Common.ScreenLibrary.ResizeType">
            <summary>
            表示調整大小模式
            </summary>
        </member>
        <member name="M:Win32Common.ScreenLibrary.BitMapDeal.PrintScreen(System.Drawing.Rectangle)">
            <summary>
            截取屏幕
            </summary>
            <param name="rect">开始截取位置</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.ScreenLibrary.BitMapDeal.SelectionPrintScreen">
            <summary>
            区域截取屏幕
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.ScreenLibrary.BitMapDeal.BitmapCut(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            取得圖象指定區域的信息，並創建為一個新的圖象返回。
            </summary>
            <param name="img">圖象。</param>
            <param name="x">圖象內起始的 X 坐標處。</param>
            <param name="y">圖象內起始的 Y 坐標處</param>
            <param name="width">需要獲得的區域寬度。</param>
            <param name="height">需要獲得的區域高度。</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.ScreenLibrary.BitMapDeal.GetScreenBitmap">
            <summary>
            截取屏幕图像。
            </summary>
            <returns></returns>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY_ENTRY.Name">
            <summary>
            目录项名称字符串指针或ID
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.IMAGE_RESOURCE_DIRECTORY_ENTRY.OffsetToData">
            <summary>
            资源数据偏移地址或子目录偏移地址
            </summary>
        </member>
        <member name="T:Win32Common.CShareAsm.TDisasm">
            <summary>
            // 反汇编结果
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.pi">
            <summary>
             指令指针
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.dump">
            <summary>
            (*) 16进制的指令存储
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.result">
            <summary>
            (*) 已反汇编指令
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.comment">
            <summary>
            简短注释
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.cmdtype">
            <summary>
            C_xxx 之一
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.memtype">
            <summary>
            已寻址的内存变量类型
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.nprefix">
            <summary>
            前缀数字
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.indexed">
            <summary>
            地址包含寄存器
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.jmpconst">
            <summary>
            常量跳转地址
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.jmptable">
            <summary>
            switch 表中可能地址
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.adrconst">
            <summary>
            常量是地址的一部分
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.immconst">
            <summary>
            立即数
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.zeroconst">
            <summary>
            无0常量
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.fixupoffset">
            <summary>
            32位修正的可能偏移
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.fixupsize">
            <summary>
            偏移总大小可能修正数或 0
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.error">
            <summary>
            反汇编时的错误信息
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.TDisasm.warnings">
            <summary>
            组合于DAW_xxx
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.Unknow">
            <summary>
            不知名处理器
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.uintel80386">
            <summary>
            uintel 80386  处理器以上
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.uintel80486">
            <summary>
            uintel 80486  处理器以上
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.uintelPentium">
            <summary>
            uintel奔腾处理器以上
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.R3000BigEndian">
            <summary>
            R3000(MIPS)处理器，big endian
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.R3000LittleEndian">
            <summary>
            R3000(MIPS)处理器，little endian
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.R4000LittleEndian">
            <summary>
            R4000(MIPS)处理器，little endian
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.R10000LittleEndian">
            <summary>
            R10000(MIPS)处理器，little endian
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.AXP">
            <summary>
             DEC Alpha AXP处理器
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.MachineType.IBMPowerPCLittleEndian">
            <summary>
            IBM Power PC，little endian
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.Machine">
            <summary>
            运行平台
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.NumberOfSections">
            <summary>
            文件的区块数目
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.TimeDateStamp">
            <summary>
            文件的创建日期和时间
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.PouinterToSymbolTable">
            <summary>
            指向符号表(用于调试)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.NumberOfSymbols">
            <summary>
            符号表中的符号个数(用于调试)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.SizeOfOptionalHeader">
            <summary>
            IMAGE_OPTIONAL_HEADER的结构大小
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_FILE_HEADER.Characteristics">
            <summary>
            文件属性
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.BoundImportInfo.LoadInfo(System.UInt32)">
            <summary>
            加载绑定表的信息
            </summary>
            <param name="fristIBIDOffest">第一个结构体的文件偏移</param>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BOUND_IMPORT_DESCRIPTORS.BoundImportInfo.IsNull">
            <summary>
            判断对象是否为空
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DATA_DIRECTORY.VirtualAddress">
            <summary>
            起始块RAV
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_DATA_DIRECTORY.Size">
            <summary>
            数据块长度
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_IMPORT_DESCRIPTORS.ThunkDataInfo.IsEmpty">
            <summary>
            是否已经为空值
            </summary>
        </member>
        <member name="M:Win32Common.CShareAsm.AssembleCode.AppendCode(System.String)">
            <summary>
            添加一个代码行
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Win32Common.CShareAsm.AssembleCode.AppendByte(System.Byte[])">
            <summary>
            添加机器码
            </summary>
            <param name="machineCode"></param>
        </member>
        <member name="M:Win32Common.CShareAsm.AssembleCode.AppendByte(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            添加机器码
            </summary>
            <param name="machineCode"></param>
        </member>
        <member name="T:Win32Common.Win32.WindowsAPI">
            <summary>
            Windows API Functions
            </summary>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.GetForegroundWindow">
            <summary>
            获取当前系统的活动窗口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            获取窗体所在的进程
            </summary>
            <param name="hwnd">指定窗口句柄</param>
            <param name="lpdwProcessId">返回进程id</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.AttachThreadInput(System.Int32,System.Int32,System.Int32)">
            <summary>
            绑定线程输入
            </summary>
            <param name="idAttach">欲连接线程的标识符（ID）</param>
            <param name="idAttachTo">与idAttach线程连接的另一个线程的标识符</param>
            <param name="fAttach">TRUE（非零）连接，FALSE撤消连接</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHGetMalloc(System.IntPtr@)">
            <summary>
            Retrieves a pointer to the Shell's IMalloc interface.
            </summary>
            <param name="hObject">Address of a pointer that receives the Shell's IMalloc interface pointer.</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHGetFolderLocation(System.IntPtr,System.Int32,System.IntPtr,System.UInt32,System.IntPtr@)">
            <summary>
            Retrieves the path of a folder as an PIDL.
            </summary>
            <param name="hwndOwner">Handle to the owner window.</param>
            <param name="nFolder">A CSIDL value that identifies the folder to be located</param>
            <param name="hToken">Token that can be used to represent a particular user</param>
            <param name="dwReserved">Reserved</param>
            <param name="ppidl">Address of a pointer to an item identifier list structure specifying the folder's location relative to the root of the namespace (the desktop).</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHGetPathFromIDList(System.IntPtr,System.Text.StringBuilder)">
            <summary>
            Converts an item identifier list to a file system path. 
            </summary>
            <param name="pidl">Address of an item identifier list that specifies a file or directory location relative to the root of the namespace (the desktop). </param>
            <param name="pszPath">Address of a buffer to receive the file system path.</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHGetFolderPath(System.IntPtr,System.Int32,System.IntPtr,System.UInt32,System.Text.StringBuilder)">
            <summary>
            Takes the CSIDL of a folder and returns the pathname.
            </summary>
            <param name="hwndOwner">Handle to an owner window.</param>
            <param name="nFolder">A CSIDL value that identifies the folder whose path is to be retrieved.</param>
            <param name="hToken">An access token that can be used to represent a particular user.</param>
            <param name="dwFlags">Flags to specify which path is to be returned. It is used for cases where the folder associated with a CSIDL may be moved or renamed by the user. </param>
            <param name="pszPath">Pointer to a null-terminated string which will receive the path.</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHParseDisplayName(System.String,System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            Translates a Shell namespace object's display name into an item 
            identifier list and returns the attributes of the object. This function is 
            the preferred method to convert a string to a pointer to an item identifier 
            list (PIDL). 
            </summary>
            <param name="pszName">Pointer to a zero-terminated wide string that contains the display name  to parse. </param>
            <param name="pBndContext">Optional bind context that controls the parsing operation. This parameter is normally set to NULL.</param>
            <param name="ppidl">Address of a pointer to a variable of type ITEMIDLIST that receives the item identifier list for the object.</param>
            <param name="AttrToQuery">ULONG value that specifies the attributes to query.</param>
            <param name="ResultAttr">Pointer to a ULONG. On return, those attributes that are true for the object and were requested in AttrToQuery will be set. </param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHGetDesktopFolder(System.IntPtr@)">
            <summary>
            Retrieves the IShellFolder interface for the desktop folder,
            which is the root of the Shell's namespace. 
            </summary>
            <param name="ppshf">Address that receives an IShellFolder interface pointer for the desktop folder.</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHBindToParent(System.IntPtr,System.Guid,System.IntPtr@,System.IntPtr@)">
            <summary>
            This function takes the fully-qualified pointer to an item
            identifier list (PIDL) of a namespace object, and returns a specified
            interface pointer on the parent object.
            </summary>
            <param name="pidl">The item's PIDL. </param>
            <param name="riid">The REFIID of one of the interfaces exposed by the item's parent object.</param>
            <param name="ppv">A pointer to the interface specified by riid. You must release the object when you are finished.</param>
            <param name="ppidlLast">// The item's PIDL relative to the parent folder. This PIDL can be used with many of the methods supported by the parent folder's interfaces. If you set ppidlLast to NULL, the PIDL will not be returned. </param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.StrRetToBSTR(Win32Common.Win32.STRRET@,System.IntPtr,System.String@)">
            <summary>
            Accepts a STRRET structure returned by
            ShellFolder::GetDisplayNameOf that contains or points to a string, and then
            returns that string as a BSTR.
            </summary>
            <param name="pstr">Pointer to a STRRET structure.</param>
            <param name="pidl">Pointer to an ITEMIDLIST uniquely identifying a file object or subfolder relative to the parent folder.</param>
            <param name="pbstr">Pointer to a variable of type BSTR that contains the converted string.</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.StrRetToBuf(Win32Common.Win32.STRRET@,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Takes a STRRET structure returned by IShellFolder::GetDisplayNameOf,
            converts it to a string, and places the result in a buffer. 
            </summary>
            <param name="pstr">Pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <param name="pidl">Pointer to the item's ITEMIDLIST structure.</param>
            <param name="pszBuf">Buffer to hold the display name. It will be returned as a null-terminated string. If cchBuf is too small, the name will be truncated to fit.</param>
            <param name="cchBuf">Size of pszBuf, in characters. If cchBuf is too small, the string will be truncated to fit. </param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SHBrowseForFolder(Win32Common.Win32.BROWSEINFO@)">
            <summary>
            Displays a dialog box that enables the user to select a Shell folder. 
            </summary>
            <param name="lbpi">// Pointer to a BROWSEINFO structure that contains information used to display the dialog box.</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SetThreadContext(System.IntPtr,Win32Common.Win32.CONTEXT@)">
            <summary>
            设置线程信息
            </summary>
            <param name="hThread"></param>
            <param name="lpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.GetThreadContext(System.IntPtr,Win32Common.Win32.CONTEXT@)">
            <summary>
            获取线程信息
            </summary>
            <param name="hThread"></param>
            <param name="lpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.ReadProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.Int32,System.UInt32@)">
            <summary>
            读取进程内存
            </summary>
            <param name="hProcess">进程句柄</param>
            <param name="lpBaseAddress">基地址</param>
            <param name="lpBuffer">缓冲</param>
            <param name="nSize">要读的字节数</param>
            <param name="lpNumberOfBytesWritten">实际读出的字节数</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.WriteProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.Int32,System.UInt32@)">
            <summary>
            写入进程内存
            </summary>
            <param name="hProcess">进程句柄</param>
            <param name="lpBaseAddress">基地址</param>
            <param name="lpBuffer">缓冲</param>
            <param name="nSize">要写入的字节数</param>
            <param name="lpNumberOfBytesWritten">真正写入的字节数</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.SuspendThread(System.IntPtr)">
            <summary>
            挂起线程
            </summary>
            <param name="hThread">线程句柄</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.Win32.WindowsAPI.ResumeThread(System.IntPtr)">
            <summary>
            继续线程
            </summary>
            <param name="hThread">线程句柄</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_RESOURCE_DIRECTORYS.ImageResourceManager.FillItems">
            <summary>
            筛选出资源信息
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.Characteristics">
            <summary>
            没有用途，总是为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.TimeDateStamp">
            <summary>
            文件被产生时刻
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.MajorVersion">
            <summary>
            主版本号，总是为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.MinorVersion">
            <summary>
            次版本号总是为0
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.Name">
            <summary>
            RVA，指向一个DLL文件名称
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.Base">
            <summary>
            起始序号
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.NumberOfFunctions">
            <summary>
            输出函数个数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.NumberOfNames">
            <summary>
            以名称输出的函数个数
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.AddressOfFunctions">
            <summary>
            RVA, 指向一个由函数地址构成的数组
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.AddressOfNames">
            <summary>
            RVA, 指向一个由字符串指针所构成的数组
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_EXPORT_DIRECTORYS.IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals">
            <summary>
            输出序数表的RAV
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.NoRelocating">
            <summary>
            文件不存在重定位信息
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.Execute">
            <summary>
            文件可执行，如果为0则可能链接时候出问题了
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.LinenumberRemoved">
            <summary>
            行号信息被移去
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.SymbolRemoved">
            <summary>
            符号信息被移去
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.Flat">
            <summary>
            应用程序地址超过2GB地址
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.LowBitByteInstead">
            <summary>
            处理机的低字节位相反
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.Platform32Bit">
            <summary>
            目标平台是32位机器
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.DBGRemoved">
            <summary>
            DBG文件调试信息被移去
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.CopyFromMobile">
            <summary>
            如果映象文件在可移动设备中，则先复制到交换文件后再运行
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.CopyFromNetwork">
            <summary>
            如果映象文件在网络中，则先复制到交换文件后再运行
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.SystemFile">
            <summary>
            系统文件
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.DllFile">
            <summary>
            Dll文件
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.SingleProcessor">
            <summary>
            文件只能运行在单处理器上
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_FILE_Characteristics.HighBitByteInstead">
            <summary>
            处理机的高位字节是相反的
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.Enums.ResourceType">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Unknow">
            <summary>
            无资源
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Cursor">
            <summary>
            光标
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Bitmap">
            <summary>
            位图
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Menu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Dialog">
            <summary>
            对话框
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.FontDirectory">
            <summary>
            字体目录
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Font">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Accelerators">
            <summary>
            加速键
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.Unformatted">
            <summary>
            未格式资源
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.MessageTable">
            <summary>
            消息表
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.GroupCursor">
            <summary>
            光标组
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.GroupIcon">
            <summary>
            图标组
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.ResourceType.VersionInformation">
            <summary>
            版本信息
            </summary>
        </member>
        <member name="T:Win32Common.CShareAsm.CodeType">
            <summary>
            代码类型
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.CodeType.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="F:Win32Common.CShareAsm.CodeType.Byte">
            <summary>
            机器码
            </summary>
        </member>
        <member name="T:Win32Common.CShareAsm.AsmLine">
            <summary>
            汇编行
            </summary>
        </member>
        <member name="P:Win32Common.CShareAsm.AsmLine.Type">
            <summary>
            代码类型
            </summary>
        </member>
        <member name="P:Win32Common.CShareAsm.AsmLine.Value">
            <summary>
            代码值
            </summary>
        </member>
        <member name="T:Win32Common.Win32.WindowsApplication">
            <summary>
            系统程序
            </summary>
        </member>
        <member name="M:Win32Common.Win32.WindowsApplication.DoExitWin(Win32Common.Win32.EWX)">
            <summary>
            退出系统
            </summary>
            <param name="flg">标识</param>
        </member>
        <member name="M:Win32Common.Win32.WindowsApplication.Is64System">
            <summary>
            是否64位系统
            </summary>
            <returns></returns>
        </member>
        <member name="P:Win32Common.Win32.WindowsApplication.IsWindows2000OrNewer">
            <summary>
            Gets a value indicating if the operating system is a Windows 2000 or a newer one.
            </summary>
        </member>
        <member name="P:Win32Common.Win32.WindowsApplication.IsWindowsXpOrNewer">
            <summary>
            Gets a value indicating if the operating system is a Windows XP or a newer one.
            </summary>
        </member>
        <member name="P:Win32Common.Win32.WindowsApplication.IsWindowsVistaOrNewer">
            <summary>
            Gets a value indicating if the operating system is a Windows Vista or a newer one.
            </summary>
        </member>
        <member name="T:Win32Common.Win32.RegistryUtil">
            <summary>
            Summary description for Registry.
            </summary>
        </member>
        <member name="T:Win32Common.ScreenLibrary.ScreenWnd">
            <summary>
            屏幕截圖器。
            </summary>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            將屏幕圖象繪制為為本窗口的背景。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.ScreenWnd_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            按 ESC 鍵時取消屏幕截圖。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.DrawSelection">
            <summary>
            繪制選區表現。
            </summary>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.MoveSelection(System.Int32,System.Int32)">
            <summary>
            已選中區域的移動表現。
            </summary>
            <param name="MouseX">當前鼠標的 X 坐標</param>
            <param name="MouseY">當前鼠標的 Y 坐標</param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.ResizeSelection(Win32Common.ScreenLibrary.ResizeType,System.Int32,System.Int32)">
            <summary>
            调整选区的大小。
            </summary>
            <param name="Resize">选区的大小调整方式。</param>
            <param name="X">当前鼠标的 X 坐标。</param>
            <param name="Y">当前鼠标的 Y 坐标。</param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标按下时。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标弹起时。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            当鼠标移动时。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.CancelScreenshots">
            <summary>
            取消截圖。
            </summary>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.ScreenshotsComplete">
            <summary>
            完成截圖。
            </summary>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.contextMenuStrip1_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            控制截圖菜單的可用性。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.smi_Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            點擊取菜命令時。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.smi_OK_Click(System.Object,System.EventArgs)">
            <summary>
            點擊完成命令時。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.ScreenWnd_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            選定區域後雙擊完成截圖。
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Win32Common.ScreenLibrary.ScreenWnd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Win32Common.ScreenLibrary.ScreenWnd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.#ctor(Win32Common.PELibrary.PEHandle,Win32Common.PELibrary.PEInfo.IMAGE_DATA_DIRECTORY[])">
            <summary>
            加载数据目录表信息
            </summary>
            <param name="pe">pe信息</param>
            <param name="stm">流</param>
            <param name="dataDirectorys">数据目录表</param>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadBoundImportDescriptors">
            <summary>
            加载输入表
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadImportDescriptors">
            <summary>
            加载输入表
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadExportDescriptors">
            <summary>
            加载输出表
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadBaseRelocation">
            <summary>
            加载基址重定位
            </summary>
        </member>
        <member name="M:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.LoadResourceDirector">
            <summary>
            加载资源表
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.ImportDescriptors">
            <summary>
            输入表信息
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.ImageExportDirectory">
            <summary>
            输出表信息
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.BaseRelocation">
            <summary>
            基址重定位表
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.ImageDataDirectorys.ResourceDirector">
            <summary>
            资源表
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics">
            <summary>
            区块属性类
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_CNT_CODE">
            <summary>
            包含代码，常与10000000H一起设置
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_CNT_INITIALIZED_DATA">
            <summary>
            该块包含已初始化的数据
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_CNT_UNINITIALIZED_DATA">
            <summary>
            该块包含未初始化的数据
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_DISCARDABLE">
            <summary>
            该块可被丢弃，因为它一旦被装入后，进程就不再需要它了常见的可丢弃块寺.reloc(重定位块)
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_SHARED">
            <summary>
            该块为共享
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_EXECUTE">
            <summary>
            该块为可执行。通常当00000020H标志被设置时，该标志也被设置
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_READ">
            <summary>
            该块可读。可执行文件中的块总是设置该块标志
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.Enums.IMAGE_SECTION_Characteristics.IMAGE_SCN_MEM_WRITE">
            <summary>
            该块可写。如果可执行文件没有设置该标志，装载程序就将在内存映象页标记为可读或可执行
            </summary>
        </member>
        <member name="T:Win32Common.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:Win32Common.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Win32Common.Properties.Resources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.Name">
            <summary>
            节表名称
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.Misc">
            <summary>
            区块尺寸
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.VirtualAddress">
            <summary>
            虚拟地址
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.SizeOfRawData">
            <summary>
            文件对齐后的尺寸
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.PointerToRawData">
            <summary>
            节基于文件的偏移量
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.PointerToRelocations">
            <summary>
            重定位的偏移
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.PointerToLinenumbers">
            <summary>
            行号表的偏移
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.NumberOfRelocations">
            <summary>
            重定位项数目
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.NumberOfLinenumbers">
            <summary>
            行号表的数目
            </summary>
        </member>
        <member name="F:Win32Common.PELibrary.PEInfo.IMAGE_SECTION_HEADER.Characteristics">
            <summary>
            节属性
            </summary>
        </member>
        <member name="T:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.IMAGE_BASE_RELOCATION">
            <summary>
            基址重定位
            </summary>
        </member>
        <member name="P:Win32Common.PELibrary.PEInfo.PEDataDirectors.IMAGE_BASE_RELOCATIONS.IMAGE_BASE_RELOCATION.IsNull">
            <summary>
            判断此结构是否为空
            </summary>
        </member>
        <member name="M:Win32Common.CShareAsm.DisAssemble.LoadAssembleHandle">
            <summary>
            加载编译函数的句柄
            </summary>
        </member>
        <member name="M:Win32Common.CShareAsm.DisAssemble.LoadDisAssembleHandle">
            <summary>
            加载编译函数的句柄
            </summary>
        </member>
        <member name="M:Win32Common.CShareAsm.DisAssemble.Assemble(Win32Common.CShareAsm.AssembleCode,System.Type,System.IntPtr@)">
            <summary>
            编译汇编代码
            </summary>
            <param name="sourceCode">源代码</param>
            <param name="delegateType">函数类型</param>
            <param name="functionHandle">函数句柄</param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.CShareAsm.DisAssemble.Assemble(Win32Common.CShareAsm.AssembleCode,System.Type)">
            <summary>
            编译汇编代码
            </summary>
            <param name="sourceCode">源代码</param>
            <param name="delegateType"></param>
            <returns></returns>
        </member>
        <member name="M:Win32Common.CShareAsm.DisAssemble.GetBytes(Win32Common.CShareAsm.AssembleCode)">
            <summary>
            把汇编码解释成字节
            </summary>
            <param name="sourceCode"></param>
            <returns></returns>
        </member>
    </members>
</doc>
